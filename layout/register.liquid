<!doctype html>
<html data-wf-page="65f2b1f8d023e4faf1524a47" data-wf-site="65f2b1f4d023e4faf15243a0" lang="en">
    <head>
        <meta charset="utf-8">
        <title>
            {{ page_title }}
        </title>
        <meta content="{{ page_description }}" name="description">
        <meta content="{{ page_title }}" property="og:title">
        <meta content="{{ page_description }}" property="og:description">
        <meta content="{{ page_title }}" property="twitter:title">
        <meta content="{{ page_description }}" property="twitter:description">
        <meta property="og:type" content="website">
        <meta content="summary_large_image" name="twitter:card">
        <meta content="width=device-width, initial-scale=1" name="viewport">
        <meta content="Webflow" name="generator">
        <link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
        <link href="{{ 'webflow.css' | asset_url }}" rel="stylesheet" type="text/css">
        <link href="{{ 'liquify-shopify.webflow.css' | asset_url }}" rel="stylesheet" type="text/css">
        <script type="text/javascript">
            !(function (o, c) {
                var n = c.documentElement,
                    t = ' w-mod-';
                (n.className += t + 'js'),
                    ('ontouchstart' in o || (o.DocumentTouch && c instanceof DocumentTouch)) &&
                        (n.className += t + 'touch');
            })(window, document);
        </script>

        {% if settings.favicon == blank %}
            <link href="{{ 'favicon.png' | asset_url }}" rel="shortcut icon" type="image/x-icon">
        {% else %}
            <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
        {% endif %}

        {% if settings.apple_touch_icon == blank %}
            <link href="{{ 'webclip.png' | asset_url }}" rel="apple-touch-icon">
        {% else %}
            <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
        {% endif %}

        <script defer="" src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
        <style>
            [x-cloak] {
                display: none !important;
            }
            [li-cloak_disabled] {
                display: none !important;
            }
            /* Setup Font and Background Color if Text is selected */
            ::selection {
                color: #fff;
                background: #e91b7f;
            }
            ::-moz-selection {
                color: #fff;
                background: #e91b7f;
            }
        </style>
        <meta name="theme-color" content="#000" media="(prefers-color-scheme: light)">
        <meta name="theme-color" content="#fff" media="(prefers-color-scheme: dark)">
        {{ content_for_header }}
    </head>
    <body li-page="register" li-layout="account">
        <div class="page-wrapper">
            {% render 'global_styles' %}
            {% section 'header' %}
            {{ content_for_layout }}
            {% section 'footer' %}
        </div>
        <script
            src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=65f2b1f4d023e4faf15243a0"
            type="text/javascript"
            integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
            crossorigin="anonymous"
        ></script>
        <script src="{{ 'webflow.js' | asset_url }}" type="text/javascript"></script>
        <script>
            // predictive-search
            class PredictiveSearch extends HTMLElement {
                constructor() {
                    super();
                    this.input = this.querySelector('input[type="search"]');
                    this.predictiveSearchResults = this.querySelector('#predictive-search');
                    this.input.addEventListener(
                        'input',
                        this.debounce((event) => {
                            this.onChange(event);
                        }, 300).bind(this),
                    );
                }
                onChange() {
                    const searchTerm = this.input.value.trim();
                    if (!searchTerm.length) {
                        this.close();
                        return;
                    }
                    this.getSearchResults(searchTerm);
                }
                getSearchResults(searchTerm) {
                    fetch(`/search/suggest?q=${searchTerm}&section_id=predictive_search`)
                        .then((response) => {
                            if (!response.ok) {
                                var error = new Error(response.status);
                                this.close();
                                throw error;
                            }
                            return response.text();
                        })
                        .then((text) => {
                            const resultsMarkup = new DOMParser()
                                .parseFromString(text, 'text/html')
                                .querySelector('#shopify-section-predictive_search').innerHTML;
                            this.predictiveSearchResults.innerHTML = resultsMarkup;
                            this.open();
                        })
                        .catch((error) => {
                            this.close();
                            throw error;
                        });
                }
                open() {
                    this.predictiveSearchResults.style.display = 'block';
                }
                close() {
                    this.predictiveSearchResults.style.display = 'none';
                }
                debounce(fn, wait) {
                    let t;
                    return (...args) => {
                        clearTimeout(t);
                        t = setTimeout(() => fn.apply(this, args), wait);
                    };
                }
            }
            customElements.define('predictive-search', PredictiveSearch);
        </script>
    </body>
</html>
